{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/all-menus/all-menus.component.html","./src/app/all-menus/all-menus.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/create-menu-dialog/create-menu-dialog.component.ts","./src/app/create-menu-dialog/create-menu-dialog.component.html","./src/app/create-restaurant-dialog/create-restaurant-dialog.component.ts","./src/app/create-restaurant-dialog/create-restaurant-dialog.component.html","./src/app/dashboard-restaurant-card/dashboard-restaurant-card.component.ts","./src/app/dashboard-restaurant-card/dashboard-restaurant-card.component.html","./src/app/dialog-box/dialog-box.component.ts","./src/app/dialog-box/dialog-box.component.html","./src/app/edit-restaurant/edit-restaurant.component.ts","./src/app/edit-restaurant/edit-restaurant.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/layout/layout.component.ts","./src/app/layout/layout.component.html","./src/app/manage-menu/manage-menu.component.html","./src/app/manage-menu/manage-menu.component.ts","./src/app/menu-card/menu-card.component.ts","./src/app/menu-card/menu-card.component.html","./src/app/restaurant-dashboard/restaurant-dashboard.component.html","./src/app/restaurant-dashboard/restaurant-dashboard.component.ts","./src/app/services/auth/auth.service.ts","./src/app/services/dashboard/create-restaurant.service.ts","./src/app/services/dashboard/dashboard.service.ts","./src/app/services/edit-restaurant/edit-restaurant.service.ts","./src/app/services/restaurant/menu.service.ts","./src/app/user-profile/user-profile.component.ts","./src/app/user-profile/user-profile.component.html","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["<main role=\"main\">\n    <div class=\"album py-5 bg-light\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-md-6\" *ngFor=\"let menu of menus\">\n            <div class=\"card mb-4 box-shadow\">\n              <app-menu-card\n                [menu]=\"menu\"\n              ></app-menu-card>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </main>\n  ","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MenuService } from '../services/restaurant/menu.service';\n\n@Component({\n  selector: 'app-all-menus',\n  templateUrl: './all-menus.component.html',\n  styleUrls: ['./all-menus.component.css']\n})\nexport class AllMenusComponent {\n  public restaurantID: string = '';\n  public menus: any[] = [];\n  constructor(\n    private route: ActivatedRoute,\n    private menuService: MenuService,\n    ) { }\n\n  ngOnInit() {\n    this.restaurantID = this.route.snapshot.paramMap.get('restaurantID')?.toString() as string;\n    console.log(`[AllMenusComponent] restaurantID: ${this.restaurantID}`);\n    this.menuService.getAllMenus(this.restaurantID).subscribe((res: any) => {\n      this.menus = res;\n      console.log(res);\n    });\n    console.log(`[AllMenusComponent] menus: ${this.menus}`); \n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { RestaurantDashboardComponent } from './restaurant-dashboard/restaurant-dashboard.component';\nimport { ManageMenuComponent } from './manage-menu/manage-menu.component';\n\nimport { EditRestaurantComponent } from './edit-restaurant/edit-restaurant.component';\nimport { AllMenusComponent } from './all-menus/all-menus.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent, pathMatch: 'full' },\n  {path: 'dashboard', component: RestaurantDashboardComponent, pathMatch: 'full' },\n  {path: 'menus', component: ManageMenuComponent},\n  {path: 'menus/:restaurantID', component: AllMenusComponent, pathMatch: 'full'},\n  {path:'restaurant/:restaurantID',component:EditRestaurantComponent},\n  {path: 'menus/:restaurantID/:menuID', component: ManageMenuComponent, pathMatch: 'full'},\n  {path:'restaurant',component:EditRestaurantComponent},\n  {path: 'profile', component: UserProfileComponent}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{useHash:true})],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule {\n\n }\n","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../environments/environment';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  baseURL: string = environment.apiUrl;\n  title = 'QrWay';\n  restaurants:any[]=[];\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(){}\n\n}\n","<app-layout></app-layout>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { ManageMenuComponent } from './manage-menu/manage-menu.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\n// Services\nimport { DashboardService } from './services/dashboard/dashboard.service';\nimport {CreateRestaurantService} from \"./services/dashboard/create-restaurant.service\";\nimport { MenuService } from './services/restaurant/menu.service';\n// Material imports\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { CreateRestaurantDialogComponent } from './create-restaurant-dialog/create-restaurant-dialog.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatIconModule} from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n// Components\nimport { LayoutComponent } from './layout/layout.component';\nimport { RestaurantDashboardComponent } from './restaurant-dashboard/restaurant-dashboard.component';\nimport { DashboardRestaurantCardComponent } from './dashboard-restaurant-card/dashboard-restaurant-card.component';\nimport { HomeComponent } from './home/home.component';\nimport { EditRestaurantComponent } from './edit-restaurant/edit-restaurant.component';\nimport { AllMenusComponent } from './all-menus/all-menus.component';\nimport { MenuCardComponent } from './menu-card/menu-card.component';\nimport { CreateMenuDialogComponent } from './create-menu-dialog/create-menu-dialog.component';\nimport { DialogBoxComponent } from './dialog-box/dialog-box.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ManageMenuComponent,\n    LayoutComponent,\n    RestaurantDashboardComponent,\n    HomeComponent,\n    DialogBoxComponent,\n    DashboardRestaurantCardComponent, \n    CreateRestaurantDialogComponent,\n    EditRestaurantComponent,\n    AllMenusComponent,\n    MenuCardComponent,\n    CreateMenuDialogComponent,\n    UserProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgbModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    FormsModule,\n    MatCardModule,\n    MatIconModule,\n    MatTooltipModule\n  ],\n  providers: [DashboardService, CreateRestaurantService, HttpClientModule,EditRestaurantComponent, MenuService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { MenuService } from '../services/restaurant/menu.service';\nimport IMenuModelAngular from '../share/IMenuModelAngular';\n\n@Component({\n  selector: 'app-create-menu-dialog',\n  templateUrl: './create-menu-dialog.component.html',\n  styleUrls: ['./create-menu-dialog.component.css']\n})\nexport class CreateMenuDialogComponent {\n\n  menuForm: FormGroup;\n  sendNewMenu: IMenuModelAngular;\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateMenuDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private menuService: MenuService) {\n    this.sendNewMenu = {} as IMenuModelAngular;\n    this.menuForm = this.fb.group({\n      menuName: ['', Validators.required],\n      menuDescription: [''],\n      menuSections: this.fb.array([]),\n      menuStartTime: ['', Validators.required],\n      menuEndTime: ['', Validators.required]\n    });\n\n  }\n\n  ngOnInit(): void {\n    console.log(\"[CreateMenuDialog] RestaurantID: \", this.data.restaurantID);\n  }\n\n  get menuSections(): FormArray {\n    return this.menuForm.get('menuSections') as FormArray;\n  }\n\n  addMenuSection(): void {\n    this.menuSections.push(this.fb.control(''));\n  }\n\n  removeMenuSection(index: number): void {\n    this.menuSections.removeAt(index);\n  }\n\n  onSubmit(): void {\n    if (this.menuForm.valid) {\n      // Process the form data here\n      this.sendNewMenu.menuName = this.menuForm.value.menuName;\n      this.sendNewMenu.menuDescription = this.menuForm.value.menuDescription;\n      // convert form's menuSection array to object with the array values are keys and empty array as values\n      let menuSectionsObject: any = {};\n      this.menuForm.value.menuSections.forEach((section: string) => {\n        menuSectionsObject[section] = [];\n        console.log(\"[CreateMenuDialog] section: \", section);\n      });\n      console.log(\"[CreateMenuDialog] menuSectionsObject: \", menuSectionsObject);\n      this.sendNewMenu.menuSections = menuSectionsObject;\n      this.sendNewMenu.menuStartTime = this.menuForm.value.menuStartTime;\n      this.sendNewMenu.menuEndTime = this.menuForm.value.menuEndTime;\n      this.sendNewMenu.restaurantID = this.data.restaurantID;\n      // send form data to service\n      this.menuService.createMenu(this.sendNewMenu).subscribe((data: object) => {\n        console.log(\"[CreateMenuDialog] data: \", data);\n        this.dialogRef.close();\n      });\n    }\n  }\n\n}\n","<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\">\n<h2 mat-dialog-title>{{ data.title }}</h2>\n<mat-dialog-content>\n  \n  <form [formGroup]=\"menuForm\" (ngSubmit)=\"onSubmit()\">\n    <mat-form-field>\n      <mat-label>Menu Name</mat-label>\n      <input matInput formControlName=\"menuName\">\n      <mat-error *ngIf=\"menuForm.get('menuName')?.invalid && menuForm.get('menuName')?.touched\">\n        Menu Name is required.\n      </mat-error>\n    </mat-form-field>\n  \n    <mat-form-field>\n      <mat-label>Menu Description</mat-label>\n      <textarea matInput formControlName=\"menuDescription\"></textarea>\n    </mat-form-field>\n  \n    <div formArrayName=\"menuSections\">\n      <div *ngFor=\"let section of menuSections.controls; let i = index\" class=\"section-row\">\n        <mat-form-field>\n          <mat-label>Menu Section {{ i + 1 }}</mat-label>\n          <input matInput [formControlName]=\"i\">\n        </mat-form-field>\n        <button mat-icon-button color=\"warn\" (click)=\"removeMenuSection(i)\">\n          <mat-icon class=\"material-symbols-outlined\">close</mat-icon>\n        </button>\n      </div>\n    </div>\n    <button mat-raised-button color=\"primary\" (click)=\"addMenuSection()\" class=\"add-menu-section\">Add Menu Section</button>\n  \n    <mat-form-field>\n      <mat-label>Menu Start Time</mat-label>\n      <input matInput formControlName=\"menuStartTime\">\n      <mat-error *ngIf=\"menuForm.get('menuStartTime')?.invalid && menuForm.get('menuStartTime')?.touched\">\n        Menu Start Time is required.\n      </mat-error>\n    </mat-form-field>\n  \n    <mat-form-field>\n      <mat-label>Menu End Time</mat-label>\n      <input matInput formControlName=\"menuEndTime\">\n      <mat-error *ngIf=\"menuForm.get('menuEndTime')?.invalid && menuForm.get('menuEndTime')?.touched\">\n        Menu End Time is required.\n      </mat-error>\n    </mat-form-field>\n  \n    <div class=\"button-container\">\n      <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"dialogRef.close()\" class=\"cancel-button\">Cancel</button>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Submit</button>\n    </div>\n  </form>\n  \n\n</mat-dialog-content>\n<!-- <mat-dialog-actions class=\"dialog-actions-position\">\n  <button mat-button (click)=\"dialogRef.close()\">Cancel</button>\n  <button mat-button color=\"primary\" (click)=\"onSubmit()\">Create</button>\n</mat-dialog-actions> -->\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CreateRestaurantService } from \"../services/dashboard/create-restaurant.service\";\n\n@Component({\n  selector: 'app-create-restaurant-dialog',\n  templateUrl: './create-restaurant-dialog.component.html',\n  styleUrls: ['./create-restaurant-dialog.component.css']\n})\n\nexport class CreateRestaurantDialogComponent {\n  addRestaurantForm: FormGroup;\n  restaurantName: FormControl;\n  description: FormControl;\n  tag: FormControl;\n  restaurantImage: FormControl;\n\n  constructor(public dialogRef: MatDialogRef<CreateRestaurantDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private createRestaurantService: CreateRestaurantService) {\n\n    this.restaurantName = new FormControl('', Validators.required);\n    this.description = new FormControl('', Validators.required);\n    this.tag = new FormControl('', Validators.required);\n    this.restaurantImage = new FormControl('', Validators.required);\n\n    this.addRestaurantForm = new FormGroup({\n      restaurantName: this.restaurantName,\n      description: this.description,\n      tag: this.tag,\n      restaurantImage: this.restaurantImage\n    })\n  }\n\n  onSubmit() {\n    if (this.addRestaurantForm.valid) {\n      // Perform actions when the form is valid\n      console.log(`[Add Restaurant Form] Sending ${JSON.stringify(this.addRestaurantForm.value)} to createRestaurantService`);\n      this.createRestaurantService.createRestaurant(this.addRestaurantForm.value)\n        .subscribe((response) => {\n          console.log(`[Add Restaurant Form] Response from createRestaurantService: ${JSON.stringify(response)}`);\n          this.dialogRef.close();\n        }, error => {\n          console.log(`[Add Restaurant Form] Error from createRestaurantService: ${JSON.stringify(error)}`);\n          this.dialogRef.close();\n        }\n        );\n    } else {\n      // Display error messages for all fields\n      this.addRestaurantForm.markAllAsTouched();\n    }\n  }\n}\n","<h2 mat-dialog-title>{{ data.title }}</h2>\n<mat-dialog-content>\n  <form [formGroup]=\"addRestaurantForm\" class=\"add-restaurant-form\">\n  <!-- Add error message for restaurantName field -->\n  <mat-error *ngIf=\"restaurantName.invalid && (restaurantName.dirty || restaurantName.touched)\">\n    Restaurant Name is required.\n  </mat-error>\n\n    <mat-form-field appearance=\"outline\">\n\n\n\n    <mat-label>Restaurant Name</mat-label>\n    <input\n      matInput\n      placeholder=\"Restaurant Name\"\n      [formControl]=\"restaurantName\"\n      required\n    />\n  </mat-form-field>\n\n\n\n  <mat-error *ngIf=\"description.invalid && (description.dirty || description.touched)\">\n    Description is required.\n  </mat-error>\n\n  <mat-form-field appearance=\"outline\">\n    <!-- Add error message for description field -->\n\n    <mat-label>Description</mat-label>\n    <textarea\n      matInput\n      placeholder=\"Description\"\n      [formControl]=\"description\"\n      required\n    ></textarea>\n  </mat-form-field>\n\n  <!-- Add error message for tag field -->\n  <mat-error *ngIf=\"tag.invalid && (tag.dirty || tag.touched)\">\n    Tag is required.\n  </mat-error>\n\n  <mat-form-field appearance=\"outline\">\n    <mat-label>Tag</mat-label>\n    <input\n      matInput\n      placeholder=\"Tag\"\n      [formControl]=\"tag\"\n      required\n    />\n  </mat-form-field>\n\n\n\n  <!-- Add error message for imageUrl field -->\n  <mat-error *ngIf=\"restaurantImage.invalid && (restaurantImage.dirty || restaurantImage.touched)\">\n    Image URL is required.\n  </mat-error>\n\n  <mat-form-field appearance=\"outline\">\n    <mat-label>Image URL</mat-label>\n    <input\n      matInput\n      placeholder=\"Image URL\"\n      [formControl]=\"restaurantImage\"\n      required\n    />\n  </mat-form-field>\n\n\n</form>\n\n\n</mat-dialog-content>\n<mat-dialog-actions class=\"dialog-actions-position\">\n  <button mat-button (click)=\"dialogRef.close()\">Cancel</button>\n  <button mat-button color=\"primary\" (click)=\"onSubmit()\">Add</button>\n</mat-dialog-actions>\n","import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DashboardService } from '../services/dashboard/dashboard.service';\nimport IRestaurantModelAngular from '../share/IRestaurantModelAngular';\nimport {EditRestaurantService} from  '../services/edit-restaurant/edit-restaurant.service';\nimport { environment } from '../../environments/environment';\n\n@Component({\n  selector: 'app-dashboard-restaurant-card',\n  templateUrl: './dashboard-restaurant-card.component.html',\n  styleUrls: ['./dashboard-restaurant-card.component.css'],\n})\nexport class DashboardRestaurantCardComponent {\n  baseURL: string = environment.apiUrl;\n  menuID: string = 'b061cc9c-e85c-11ed-a05b-0242ac120003';\n  menus: any = '';\n  \n  @Input() currentRestaurant!: IRestaurantModelAngular;\n  //restaurantData = this.currentRestaurant.restaurantID;\n\n  constructor(private router: Router, private http: HttpClient, private editRestaurantService :EditRestaurantService) {\n    this.currentRestaurant = {} as IRestaurantModelAngular\n   }\n\n  restaurant: any = {\n    restaurantName: '',\n    restaurantID: '',\n    managerID: [],\n    restaurantOwnerID: '',\n    menusID: []\n  }\n\n  public viewRestaurant(): any {\n    this.router.navigate(['/menus', this.currentRestaurant.restaurantID]);\n    console.log('[view button clicked] redirect to', this.currentRestaurant.restaurantID)\n  }\n\n  public viewMenus(restaurantID: string): any {\n    this.router.navigate(['/menus', restaurantID]);\n    console.log('[Dashboard Restaurant Card] View button clicked: redirect to', restaurantID);\n  }\n\n  editRes(){\n    var y = typeof this.currentRestaurant.managerID; \n    console.log(\" this.curRestaurant Type:\"+y);\n    console.log(\" this.curRestaurant:\"+ this.currentRestaurant.managerID[0]);\n    console.log(\"clicked\"+this.currentRestaurant);\n    this.editRestaurantService.setRestaurant(this.currentRestaurant);\n    this.router.navigate(['/restaurant',this.currentRestaurant.restaurantID]);\n  }\n\n  ngOnInit() {\n    console.log(\"[Dashboard Restaurant Card]\", this.currentRestaurant);\n  }\n}\n","<img class=\"card-img-top img-fluid\" src={{currentRestaurant.restaurantImage}} alt=\"Card image cap\" width=\"300\" height=\"300\" />\n    <div class=\"card-body\">\n        <h3 class=\"card-title fw-bold\">{{currentRestaurant.restaurantName}}</h3>\n            <p class=\"card-text\">{{currentRestaurant.description}}</p>\n              <div class=\"d-flex justify-content-between align-items-center\">\n                <div class=\"btn-group\">\n                    <button (click)=\"viewMenus(currentRestaurant.restaurantID)\" class=\"btn btn-primary\" > View </button>\n                    <button (click)=\"editRes()\" class=\"btn btn-warning\"> Edit </button>\n                </div>\n            <small class=\"text-muted\">{{currentRestaurant.tag}}</small>\n        </div>\n    </div>\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { HttpClient } from '@angular/common/http';\nimport { EditRestaurantService } from '../services/edit-restaurant/edit-restaurant.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-dialog-box',\n  templateUrl: './dialog-box.component.html',\n  styleUrls: ['./dialog-box.component.css']\n})\nexport class DialogBoxComponent {\n  restaurantID: string = '';\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogBoxComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private editRestaurantService: EditRestaurantService,\n    private http: HttpClient,\n    public router: Router\n  ) {\n    this.restaurantID = this.data.restaurantID;\n  }\n\n  ngOnInit(): void {\n    this.restaurantID = this.data.restaurantID;\n    console.log('[DialogBoxComponent] restaurantID: ${this.restaurantID}');\n  }\n\n  deleteRestaurant() {\n    this.editRestaurantService.deleteRestaurant(this.restaurantID);\n    this.dialogRef.close();\n    this.router.navigate(['/dashboard']);\n  }\n\n  dontDeleteRestaurant() {\n\n    this.dialogRef.close();\n  }\n}\n","\n<div mat-dialog-content>\n  <p>Are you sure you want to delete?</p>\n  <p>This restaurant will be deleted: {{restaurantID}}</p>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"dontDeleteRestaurant()\">No Thanks</button>\n  <button mat-button (click)=\"deleteRestaurant()\">Ok</button>\n</div>","import { Component } from '@angular/core';\nimport { MatDialog} from '@angular/material/dialog';\nimport { DialogBoxComponent } from '../dialog-box/dialog-box.component';\nimport { restaurantModel } from 'src/app/share/restaurantModel';\nimport { menuModel } from 'src/app/share/menuModel';\nimport { Router } from '@angular/router';\nimport { EditRestaurantService } from '../services/edit-restaurant/edit-restaurant.service';\nimport IRestaurantModelAngular from '../share/IRestaurantModelAngular';\nimport IMenuModelAngular from '../share/IMenuModelAngular';\nimport IRestaurantManagerModelAngular from '../share/IRestaurantManagerModelAngular';\n@Component({\n  selector: 'app-edit-restaurant',\n  templateUrl: './edit-restaurant.component.html',\n  styleUrls: ['./edit-restaurant.component.css'],\n})\nexport class EditRestaurantComponent {\n\n\n  curRestaurant: restaurantModel;\n  msg: string = '';\n  //restaurant variable\n  availableManager: any[] = [];\n  selectedManager: any[] = [];\n  managers: IRestaurantManagerModelAngular[] = [];\n  selectedManagers: IRestaurantManagerModelAngular[];\n  availableManagers: IRestaurantManagerModelAngular[];\n\n  //menu variable\n  availableMenu: menuModel[] = [];\n  selectedMenu: IMenuModelAngular[] = [];\n  menus: IMenuModelAngular[] = [];\n  selectedMenus: IMenuModelAngular[];\n  availableMenus: IMenuModelAngular[];\n\n  constructor(\n    private router: Router,\n    public dialog: MatDialog,\n    private editRestaurantService: EditRestaurantService\n  ) {\n    this.curRestaurant = {} as IRestaurantModelAngular;\n    this.selectedManagers = []\n    this.availableManagers = []\n    this.selectedMenus = []\n    this.availableMenus = []\n  }\n\n  openDeleteDialog(): void {\n    this.dialog.open(DialogBoxComponent, {\n      data: {\n        restaurantID: this.curRestaurant.restaurantID\n      }\n    });\n  }\n\n  public addManager(filter: any): any {\n    console.log(filter);\n    if (filter.length == 0) return;\n    var idx = this.availableManagers.map((e) => e.managerName).indexOf(filter);\n    var item = this.availableManagers[idx];\n    console.log('currentManager' + item.restaurantID);\n    this.availableManagers.splice(idx, 1);\n    this.selectedManagers.push(item);\n    this.availableManager = [];\n    this.selectedManager = [];\n    console.log(this.selectedManagers);\n  }\n\n  public removeManager(filter: any): any {\n    if (filter.length == 0) return;\n    var idx = this.selectedManagers.map((e) => e.managerName).indexOf(filter);\n    var item = this.selectedManagers[idx];\n    //get the index of restaurantID from the selected manager\n    var itemIdx = item.restaurantID.indexOf(this.curRestaurant.restaurantID);\n    console.log('itemIdx' + itemIdx);\n    item.restaurantID.slice(itemIdx, 1);\n    console.log('currentManager:' + item.restaurantID);\n    //update select boxes\n    this.selectedManagers.splice(idx, 1);\n    this.availableManagers.push(item);\n    this.availableManager = [];\n    this.selectedManager = [];\n  }\n\n  public addMenu(filter: any): any {\n    console.log(filter);\n    if (filter.length == 0) return;\n    var idx = this.availableMenus.map((e) => e.menuName).indexOf(filter);\n    var item = this.availableMenus[idx];\n    item.public = true;\n    this.availableMenus.splice(idx, 1);\n    this.selectedMenus.push(item);\n    this.availableMenu = [];\n    this.selectedMenu = [];\n  }\n\n  public removeMenu(filter: any): any {\n    if (filter.length == 0) return;\n    var idx = this.selectedMenus.map((e) => e.menuName).indexOf(filter);\n    var item = this.selectedMenus[idx];\n    item.public = false;\n    this.selectedMenus.splice(idx, 1);\n    this.availableMenus.push(item);\n    this.availableMenu = [];\n    this.selectedMenu = [];\n  }\n\n  public setAvailableManager(event: any): any {\n    this.availableManager = event.target.value;\n  }\n  public setSelectedManager(event: any): any {\n    this.selectedManager = event.target.value;\n  }\n  public setAvailableMenu(event: any): any {\n    this.availableMenu = event.target.value;\n  }\n  public setSelectedMenu(event: any): any {\n    this.selectedMenu = event.target.value;\n  }\n  public async getManagers(): Promise<any> {\n    console.log(\n      'this.curRestaurant.restaurantOwnerID:' +\n      this.curRestaurant.restaurantOwnerID\n    );\n\n    this.editRestaurantService.getManagers(this.curRestaurant.restaurantOwnerID)\n      .subscribe((data: any) => {\n        this.managers = data;\n        console.log('get managers from API' + this.managers);\n        this.managers.map((manager) => {\n          console.log('manager ' + manager.userID);\n          console.log(this.curRestaurant.managerID);\n          console.log(this.curRestaurant.managerID.includes(manager.userID));\n          if (this.curRestaurant.managerID.includes(manager.userID))\n            this.selectedManagers.push(manager);\n          else this.availableManagers.push(manager);\n        });\n      });\n  }\n  public async getMeuns(): Promise<any> {\n    console.log('get menus' + this.curRestaurant.restaurantID);\n    this.editRestaurantService.getMenus(this.curRestaurant.restaurantID)\n      .subscribe((data: any) => {\n        this.menus = data;\n        console.log('get managers from API' + this.managers);\n        this.menus.map((menu) => {\n          console.log('menu:' + menu.restaurantID);\n         // if (menu.restaurantID == this.curRestaurant.restaurantID )\n          if(this.curRestaurant.menusID.includes(menu.menuID))\n            this.selectedMenus.push(menu);\n          else if (menu.restaurantID == this.curRestaurant.restaurantID ) this.availableMenus.push(menu);\n        });\n      });\n  }\n  public updateRestaurant(): any {\n    // if (this.selectedManagers.length == 0) {\n    //   alert('Selected managers box must be not empty');\n    //   return;\n    // }\n\n\n    this.setUpdateRestaurant();\n    this.editRestaurantService.updateRestaurant(this.curRestaurant);\n  }\n\n  public setUpdateRestaurant(): void {\n    this.curRestaurant.managerID.splice(0, this.curRestaurant.managerID.length);\n    this.curRestaurant.menusID.splice(0, this.curRestaurant.menusID.length);\n\n\n    this.selectedManagers.map((manager) => {\n      this.curRestaurant.managerID.push(manager.userID);\n    });\n    this.selectedMenus.map((menu) => {\n      this.curRestaurant.menusID.push(menu.menuID);\n    });\n    console.log('setSelectedManagerID:' + this.curRestaurant.managerID);\n    console.log('setselectedMenusID:' + this.curRestaurant.menusID);\n    alert('Update Success');\n    localStorage.setItem('restaurant', JSON.stringify(this.curRestaurant));\n    this.router.navigate(['/restaurant', this.curRestaurant.restaurantID])\n  }\n  clickEvent() {\n    this.msg = 'Button is Clicked';\n    return this.msg;\n  }\n  ngOnInit() {\n    this.curRestaurant = this.editRestaurantService.getRestaurant();\n    if (this.curRestaurant !== undefined) {\n      localStorage.setItem('restaurant', JSON.stringify(this.curRestaurant));\n    }\n    if (this.curRestaurant == undefined) {\n      var data: any = localStorage.getItem('restaurant' || '{}');\n      this.curRestaurant = JSON.parse(data)\n    }\n    console.log(\"managerID\" + this.curRestaurant.managerID[0]);\n    this.getManagers();\n    this.getMeuns();\n\n  }\n\n}\n","\n<div class=\"container justify-content-center\">\n    <h2>Edit Restaurant</h2>\n\n    <div class=\"mb-3\">\n        <label for=\"RestaurantName\">Name</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"curRestaurant.restaurantName\" value=\"{{curRestaurant.restaurantName}}\">\n    </div>\n    <div class=\"mb-3\">\n        <label for=\"RestaurantName\">Description</label>\n        <input type=\"text\" class=\"form-control\"  [(ngModel)]=\"curRestaurant.description\" value=\"{{curRestaurant.description}}\">\n    </div>  \n    <div class=\"mb-3\">\n        <label for=\"RestaurantName\">Tag</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"curRestaurant.tag\" value=\"{{curRestaurant.tag}}\">\n    </div>\n    <div class=\"mb-3\">\n        <label for=\"RestaurantName\">Imag URL</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"curRestaurant.restaurantImage\" value=\"{{curRestaurant.restaurantImage}}\">\n    </div>\n    <div class=\"mb-3\">\n        <label for=\"RestaurantName\">Managers</label>\n        <div class=\"form-group\">\n            <div style=\"float:left\">\n                <div style=\"float:center\">Available</div>\n                <div>\n                <select class=\"form-select\" aria-label=\"Disabled select example\" aria-label=\".form-select-lg example\" size=\"5\" multiple  (ng-model)=\"availableManager\"  style=\"width:100px ; height:100px \" (change)=\"setAvailableManager($event)\">\n            <!--   <select size =\"5\"  ng-model=\"available\"   style=\"width:100px ; height:100px \">-->\n                    <option  *ngFor=\"let manager of availableManagers\"  id=\"manager.id\">{{ manager.managerName }} </option>\n                </select>          \n                </div>\n            </div>\n            <div style=\"float:left; width: 100px; text-align:center\">\n                <div>&nbsp;</div>\n                <input  type=\"button\" class=\"btn btn-primary\" id=\"move right\" value=\">\" (click)=\"addManager(availableManager)\" />  \n                <div>&nbsp;</div>\n                <input id=\"move left\" type=\"button\" class=\"btn btn-danger\" value=\"<\" (click)=\"removeManager(selectedManager)\" />\n            </div>\n            <div style=\"float:left\">\n                <div>Selected</div>\n                <div>\n                <select class=\"form-select\" aria-label=\"Disabled select example\" size=\"5\"multiple  (ng-model)=\"selectedManager\" style=\"width:100px;height:100px\" (change)=\"setSelectedManager($event)\">\n                <option  *ngFor=\"let manager of selectedManagers\" id=\"method.id\">{{ manager.managerName }}</option>\n                </select>\n                </div>\n            </div>\n            <div style=\"clear:both\">\n                <br/>\n            </div>\n        </div>\n    </div>\n    <div class=\"mb-3\">\n        <label for=\"RestaurantName\">Menu</label>\n        <div class=\"form-group\">\n            <div style=\"float:left\">\n                <div style=\"float:center\">Draft</div>\n                <div>\n                    <select size=\"5\" multiple  (ng-model)=\"availableMenu\"  style=\"width:100px ; height:100px \" (change)=\"setAvailableMenu($event)\">\n            <!--   <select size =\"5\"  ng-model=\"available\"   style=\"width:100px ; height:100px \">-->\n                    <option  *ngFor=\"let menu of availableMenus\"  id=\"manager.id\">{{ menu.menuName }} </option>\n                    </select>          \n                </div>\n            </div>\n            <div style=\"float:left; width: 100px; text-align:center\">\n            <div>&nbsp;</div>\n            <input id=\"move right\" class=\"btn btn-primary\" type=\"button\" value=\">\" (click)=\"addMenu(availableMenu)\" />\n            <div>&nbsp;</div>\n            <input id=\"move left\" class=\"btn btn-danger\" type=\"button\" value=\"<\" (click)=\"removeMenu(selectedMenu)\" />\n            </div>\n            <div style=\"float:left\">\n            <div>Publish</div>\n            <div>\n            <select size=\"5\"multiple  (ng-model)=\"selectedMenu\" style=\"width:100px;height:100px\" (change)=\"setSelectedMenu($event)\">\n                <option  *ngFor=\"let menu of selectedMenus\" id=\"method.id\">{{ menu.menuName }}</option>\n            </select>\n            </div>\n            </div>\n            <div style=\"clear:both\">\n            <br/>\n            </div>\n        </div>\n    </div>\n        <button  type=\"submit\" class=\"btn btn-primary\" (click)=\"updateRestaurant()\" >update</button>\n\n        <button  type=\"button\" class=\"btn btn-danger\" (click)=\"openDeleteDialog()\" >Delete</button>\n        \n\n</div>    \n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n  constructor(private router: Router, private authService: AuthService) {\n\n  }\n\n  ngOnInit() {\n   }\n\n  onLoginClick() {\n    console.log(\"Login Clicked\");\n    this.authService.login().subscribe(\n      (res) => {\n        console.log(\"Login Response:\", res);\n        this.authService.fetchOAuthCredentials().subscribe(\n          (res) => {\n            console.log(res);\n          });\n      });\n\n    this.router.navigate(['/dashboard']);\n  }\n\n}\n","<div class=\"container d-flex justify-content-center py-5\">\n  <a href=\"/auth/google\">\n    <button class=\"btn btn-primary mx-auto\" type=\"button\">Login</button>\n  </a>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CreateRestaurantDialogComponent } from '../create-restaurant-dialog/create-restaurant-dialog.component';\nimport { CreateMenuDialogComponent } from '../create-menu-dialog/create-menu-dialog.component';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css'],\n})\nexport class LayoutComponent {\n  shouldShowCreateRestaurantButton: boolean = true;\n  shouldShowCreateMenuButton: boolean;\n  shouldShowUserProfileButton: boolean = false;\n  public profile_image: string = localStorage.getItem('profile_image')!;\n\n  constructor(\n    public dialog: MatDialog,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.shouldShowCreateMenuButton = this.checkDynamicURL();\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        this.evaluateConditions();\n      });\n  }\n\n  ngOnInit(): void {\n    this.evaluateConditions();\n  }\n\n  private evaluateConditions(): void {\n    this.shouldShowCreateRestaurantButton = this.router.url === '/dashboard';\n    this.shouldShowCreateMenuButton = this.checkDynamicURL();\n    this.shouldShowUserProfileButton = !(this.router.url === '/');\n    this.route.params.subscribe((params) => {\n      const restaurantID = params['restaurantID']; // Assuming 'restaurantID' is the parameter name in your route\n      console.log('[LayoutComponent]: restaurantID: ', restaurantID); // Use the ID as needed in your component logic\n      console.log(\n        '[LayoutComponent]: router.url: ',\n        this.router.url.split('/')[2]\n      );\n    });\n  }\n\n  checkDynamicURL(): boolean {\n    const restaurantID = this.router.url.split('/');\n    if (\n      restaurantID[2] &&\n      this.router.url.includes('menu') &&\n      restaurantID.length <= 3\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  openCreateRestaurantDialog() {\n    this.dialog.open(CreateRestaurantDialogComponent, {\n      data: {\n        title: 'Create a new restaurant',\n      },\n    });\n  }\n\n  openCreateMenuDialog() {\n    this.dialog.open(CreateMenuDialogComponent, {\n      data: {\n        title: 'Create a new menu',\n        // Pass the restaurant ID to the dialog from the URL\n        restaurantID: this.router.url.split('/')[2],\n      },\n    });\n  }\n\n  goToUserProfile() {\n    this.router.navigateByUrl('/profile');\n  }\n}\n","<header>\n  <div class=\"collapse bg-dark\" id=\"navbarHeader\"></div>\n  <div class=\"navbar navbar-dark bg-dark box-shadow\">\n    <div class=\"container d-flex justify-content-between align-items-center\">\n      <a href=\"#\" class=\"navbar-brand d-flex align-items-center\">\n        <img class=\"\" src=\"assets/logo.png\" alt=\"QRWay Logo\" width=\"100\" height=\"auto\" />\n      </a>\n\n      <div class=\"button-container\">\n\n        <button \n          mat-raised-button\n          *ngIf=\"shouldShowCreateRestaurantButton\"\n          (click)=\"openCreateRestaurantDialog()\">Create Restaurant</button>\n\n        <button \n          mat-raised-button\n          *ngIf=\"shouldShowCreateMenuButton\"\n          (click)=\"openCreateMenuDialog()\"\n          >Create Menu</button>\n\n        <button \n          mat-fab\n          *ngIf=\"shouldShowUserProfileButton\"\n          class=\"circular-button\"\n          (click)=\"goToUserProfile()\"\n          >\n          <img class=\"profile-image\" src=\"{{ profile_image }}\" alt=\"Profile Image\">\n        </button>\n\n\n      </div>\n\n\n        \n\n    </div>\n  </div>\n</header>\n\n<main class=\"flex-grow-1\">\n  <router-outlet></router-outlet>\n</main>\n\n<footer class=\"footer fixed-bottom\">\n  <div class=\"container d-flex flex-wrap justify-content-between align-items-center\">\n    <p class=\"col-md-4 mb-0 text-body-secondary\">© 2023 Company, Inc</p>\n    <a href=\"/\" class=\"col-md-4 d-flex align-items-center justify-content-center mb-3 mb-md-0 me-md-auto link-body-emphasis text-decoration-none\">\n      <img class=\"bi me-2\" src=\"assets/logo-dark.png\" alt=\"QRWay Logo\" width=\"40\" height=\"auto\" />\n    </a>\n  </div>\n</footer>\n\n\n<!-- <footer class=\"footer\">\n  <div class=\"container\">\n    <span class=\"text-muted\">Place sticky footer content here.</span>\n  </div>\n</footer> -->","<!-- <router-outlet></router-outlet> -->\n<!-- <div *ngFor=\"let menu of menuOutput\">{{menu['menuID']}}</div>  -->\n<div class=\"manage-menu\">\n    <div class=\"sidebar\">\n      <h1>{{restaurantName}}</h1>\n      <h3>Menu Sections</h3>\n      <ul>\n        <li *ngFor=\"let section of menuSections\">\n          <a href=\"#\">{{ section }}</a>\n        </li>\n      </ul>\n      <button mat-raised-button color=\"primary\">+ Add Section</button>\n    </div>\n  \n    <div class=\"content\">\n\n      <div class=\"dropdowns\">\n        <select>\n          <option *ngFor=\"let section of menuSections\">\n            {{ section }}  \n          </option>\n          \n        </select>\n    </div>\n\n      <table class=\"item-table\">\n        <thead>\n          <tr>\n            <th>Dish Name</th>\n            <th>Description</th>\n            <th>Price</th>\n            <th>Upload Image</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <!--<tr *ngFor=\"let dish of dishes\">\n            <td>{{ dish.name }}</td>\n            <td>{{ dish.description }}</td>\n            <td>{{ dish.price }}</td>\n            <td>{{ dish.image }}</td>\n            <td><button class=\"delete-button\" (click)=\"deleteDish(dish.name)\"><i class=\"fas fa-trash\"></i></button></td>\n          </tr>  -->\n        </tbody>\n      </table>\n      <button mat-raised-button color=\"primary\" class=\"mx-4\">+ Add Item</button>\n      <button mat-raised-button color=\"primary\">Save Changes</button>\n    \n    </div>\n  </div>\n  ","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { MenuService } from '../services/restaurant/menu.service';\n\n@Component({\n  selector: 'app-managae-menu',\n  templateUrl: './manage-menu.component.html',\n  styleUrls: ['./manage-menu.component.css']\n})\n\n\nexport class ManageMenuComponent {\n  menuData: any;\n  restaurantName: string = '';\n  menuSections: any[] = [];\n  menuOutput:any[]=[];\n\n  constructor(private menuService: MenuService) { \n    this.menuData = this.menuService.getMenu();\n    this.getMenuSections();\n    this.menuService.getRestaurantName(this.menuData.restaurantID).subscribe((name: string) => {\n      this.restaurantName = name;\n    });\n  }\n\n  \n  ngOnInit(): void {\n  }\n\n  getMenuSections(): void {\n    this.menuSections = Object.keys(this.menuData.menuSections);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport IMenuModelAngular from '../share/IMenuModelAngular';\nimport { MenuService } from '../services/restaurant/menu.service';\n\n@Component({\n  selector: 'app-menu-card',\n  templateUrl: './menu-card.component.html',\n  styleUrls: ['./menu-card.component.css']\n})\n\nexport class MenuCardComponent {\n  @Input() menu!: any;\n\n  constructor(private router: Router, private http: HttpClient, private menuService: MenuService) { \n    this.menu = {} as IMenuModelAngular;\n  }\n\n  ngOnInit(): void {\n    console.log(`[MenuCardComponent] menu: ${JSON.stringify(this.menu)}`);\n  }\n\n  public redirectToMenu(restaurantID: string, menuID: string): any {\n    this.menuService.setMenu(this.menu);\n    this.router.navigate(['/menus', restaurantID, menuID]);\n    console.log(`[MenuCardComponent] View button clicked: redirect to ${menuID}`);\n  }\n}\n","<mat-card>\n    <mat-card-header>\n        <mat-card-title>{{menu.menuName}}</mat-card-title>\n        <mat-card-subtitle>{{menu.menuStartTime}} to {{menu.menuEndTime}}</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-actions align=\"start\">\n        <button mat-button (click)=\"redirectToMenu(menu.restaurantID, menu.menuID)\">View Menu</button>\n    </mat-card-actions>\n</mat-card>","<main role=\"main\">\n  <div class=\"album py-5 bg-light\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-6\" *ngFor=\"let restaurant of restaurants\">\n          <div class=\"card mb-4 box-shadow\">\n            <app-dashboard-restaurant-card\n              [currentRestaurant]=\"restaurant\"\n            ></app-dashboard-restaurant-card>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</main>\n","import { Component } from '@angular/core';\nimport { DashboardService } from '../services/dashboard/dashboard.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-restaurant-dashboard',\n  templateUrl: './restaurant-dashboard.component.html',\n  styleUrls: ['./restaurant-dashboard.component.css']\n})\nexport class RestaurantDashboardComponent {\n  public restaurants: any[] = [];\n  public user: any = {};\n\n  constructor(private dashboardService: DashboardService, private router: Router) { }\n  ngOnInit(): void {\n     this.dashboardService.getUser().subscribe((res:any)=>{\n      console.log(\"[DashboardService]: \", JSON.stringify(res));\n      this.user = res;\n      if(this.user === null){\n        console.log(\"User is null\");\n        this.router.navigate(['/']);\n      }\n      localStorage.setItem(\"userID\",this.user.userID);\n      localStorage.setItem(\"name\",this.user.name);\n      localStorage.setItem(\"email\",this.user.email);\n      localStorage.setItem(\"profile_image\",this.user.profile_image);\n      console.log(`[restaurant-dashboard.component] : ${localStorage.getItem('userID')}`);\n\n    });\n    this.dashboardService.getAllRestaurants(JSON.parse(JSON.stringify(localStorage.getItem('userID')))).subscribe((res: any) => {\n      this.restaurants = res;\n    });\n    console.log(`[restaurant-dashboard.component] Restaurants: ${this.restaurants}`);\n   \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {environment} from \"../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = `http://localhost:8080`;\n\n  constructor(private http: HttpClient) {}\n\n  login(): Observable<any> {\n    console.log(\"[AuthService] login()\");\n    let res = this.http.get<any>(`${this.apiUrl}/auth/google`);\n    console.log(res);\n    return res;\n  }\n\n  logout(): Observable<any> {\n    return this.http.post<any>(`${this.apiUrl}/logout`, null);\n  }\n\n  fetchOAuthCredentials(): Observable<any> {\n    console.log(\"[AuthService] fetchOAuthCredentials()\");\n    const headers = new HttpHeaders({'Access-Control-Allow-Origin': '*'});\n    let res =  this.http.get<any>(`${this.apiUrl}/auth/google/callback`, {headers: headers});\n    console.log(`[AuthService] OAuth Credentials: ${res}`);\n    return res;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport IRestaurantModelAngular from \"../../share/IRestaurantModelAngular\";\nimport {environment} from \"../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreateRestaurantService {\n\n  private baseURL: string = environment.apiUrl;\n  private userID:string='';\n  constructor(private http: HttpClient ) { \n  }\n\n  createRestaurant(restaurantData: IRestaurantModelAngular,) { \n    this.userID =JSON.parse(JSON.stringify(localStorage.getItem('userID')));\n\n    console.log(\"[create-restaurant.Service]\"+this.userID);\n    restaurantData.restaurantOwnerID = this.userID;\n    console.log(\"[createRestaurantService] Creating a new restaurant: \", restaurantData);\n    return this.http.post(`${this.baseURL}/restaurant/`, restaurantData);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  private baseURL: string = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  // Fetch all restaurants from backend\n  public getAllRestaurants(UserID:String): any {\n    return this.http.get<any>(`${this.baseURL}/restaurant/all/${UserID}`);\n  }\n\n  // Fetch all menus from backend\n  public getAllMenus(restaurantID: string):any {\n    return this.http.get<any>(`${this.baseURL}/menus/${restaurantID}`);\n  }\n\n  //Fetch specific restaurant from backend\n  public getRestaurant(restaurantID: string):any {\n    return this.http.get<any>(`${this.baseURL}/restaurant/${restaurantID}`);\n  }\n  public getUser(): any {\n    return this.http.get<any>(`${this.baseURL}/user`);\n  }\n\n    \n  }\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { restaurantModel } from 'src/app/share/restaurantModel';\nimport IRestaurantModelAngular from 'src/app/share/IRestaurantModelAngular';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditRestaurantService {\n  baseURL: string = environment.apiUrl;\n  restaurantIDs: any[] = [];\n  restaurants: any[] = [];\n  restaurant!: IRestaurantModelAngular;\n  constructor(private http: HttpClient) { }\n\n  // Fetch all restaurants from backend\n  public getAllRestaurant(): any {\n    this.http.get<any>(`${this.baseURL}/restaurant/all/d792c6be-e89c-11ed-a05b-0242ac120003`).subscribe(data => {\n      this.restaurantIDs = data;\n    })\n    console.log(`[Dashboard Service] getAllRestaurant: ${this.restaurantIDs}`);\n  }\n  public getManagers(restaurantOwnerID:string):any{\n    return this.http.get<any>(`${this.baseURL}/restaurantmanagers/${restaurantOwnerID}`)\n  }\n  public getMenus(restaurantID:string):any{\n     return this.http.get<any>(`${this.baseURL}/menus/${restaurantID}`);\n  }\n  public updateRestaurant(restaurant:restaurantModel){\n    const headers = { 'Content-Type': 'application/json' };\n    this.http\n    .post<restaurantModel>(\n      `${this.baseURL}/updateRestaurant`,\n      JSON.stringify(restaurant),\n      { headers: headers }\n    )\n    .subscribe((isupdate) => {\n      console.log(isupdate);\n    });\n  }\n  public setRestaurant(restaurant:IRestaurantModelAngular):void{\n    this.restaurant=restaurant;\n  }\n  public getRestaurant():IRestaurantModelAngular{\n     return this.restaurant\n  }\n\n  public deleteRestaurant(restaurantID: string): any {\n    console.log(\"[EditRestaurantService] deleteRestaurant: \" + restaurantID);\n    this.http.delete(`${this.baseURL}/restaurant/delete/${restaurantID}`)\n    .subscribe((deleteRes) => {\n      console.log(deleteRes);\n    });\n\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport IMenuModelAngular from 'src/app/share/IMenuModelAngular';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n\n  private baseURL: string = environment.apiUrl;\n  private menu: any = {};\n\n  constructor(private http: HttpClient) { }\n\n  // Fetch all menus from backend for a specific restaurant\n  public getAllMenus(restaurantID: string): any {\n    return this.http.get<any>(`${this.baseURL}/menus/${restaurantID}`);\n  }\n\n  public getRestaurantName(restaurantID: string): Observable<string> {\n    return this.http.get<any>(`${this.baseURL}/restaurant/${restaurantID}`)\n      .pipe(map((restaurant: any) => restaurant.restaurantName));\n  }\n\n  setMenu(menu: any): void {\n    this.menu = menu;\n  }\n\n  getMenu(): any {\n    return this.menu;\n  }\n\n  public createMenu(menu: IMenuModelAngular): any {\n    return this.http.post<any>(`${this.baseURL}/menus/create`, menu);\n  }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent {\n\n  public user: any = {};\n  apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private router: Router) {\n    if (localStorage.getItem('user') === null) {\n      console.log(\"User is null\");\n      this.router.navigate(['/']);\n    }\n    this.user.name = localStorage.getItem('name')!;\n    this.user.email = localStorage.getItem('email')!;\n    this.user.profile_image = localStorage.getItem('profile_image')!;\n    console.log(\"[UserProfile] User: \", this.user);   \n  }\n\n  ngOnInit() {\n  }\n\n  public handleLogout(): void {\n    this.http.get(`${this.apiUrl}/logout`);\n    console.log('[UserProfile] Logging out...');\n    localStorage.clear();\n    this.router.navigate(['/']); // Redirect to the homepage or any other desired page\n  }\n  \n\n}\n","<div class=\"container justify-content-center\">\n  <h2>Profile</h2>\n\n  <div class=\"profile-info\">\n    <p><strong>Name:</strong> {{user.name}}</p>\n    <p><strong>Email:</strong> {{user.email}}</p>\n  </div>\n\n\n\n  <button mat-raised-button (click)=\"handleLogout()\">\n  Sign Out\n  </button>\n\n</div>\n","export const environment = {\n    production: false,\n    apiUrl: 'http://localhost:8080/api'\n};\n","/// <reference types=\"@angular/localize\" />\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["i0","AllMenusComponent","constructor","route","menuService","ngOnInit","restaurantID","snapshot","paramMap","get","toString","console","log","getAllMenus","subscribe","res","menus","selectors","decls","vars","consts","template","RouterModule","HomeComponent","RestaurantDashboardComponent","ManageMenuComponent","EditRestaurantComponent","UserProfileComponent","routes","path","component","pathMatch","AppRoutingModule","forRoot","useHash","imports","exports","environment","AppComponent","http","apiUrl","BrowserModule","HttpClientModule","NgbModule","FormsModule","DashboardService","CreateRestaurantService","MenuService","BrowserAnimationsModule","MatButtonModule","MatDialogModule","CreateRestaurantDialogComponent","MatFormFieldModule","ReactiveFormsModule","MatInputModule","MatCardModule","MatIconModule","MatTooltipModule","LayoutComponent","DashboardRestaurantCardComponent","MenuCardComponent","CreateMenuDialogComponent","DialogBoxComponent","AppModule","bootstrap","declarations","MAT_DIALOG_DATA","Validators","dialogRef","data","fb","sendNewMenu","menuForm","group","menuName","required","menuDescription","menuSections","array","menuStartTime","menuEndTime","addMenuSection","push","control","removeMenuSection","index","removeAt","onSubmit","valid","value","menuSectionsObject","forEach","section","createMenu","close","ctx","FormControl","FormGroup","createRestaurantService","restaurantName","description","tag","restaurantImage","addRestaurantForm","JSON","stringify","createRestaurant","response","error","markAllAsTouched","router","editRestaurantService","managerID","restaurantOwnerID","menusID","currentRestaurant","viewRestaurant","navigate","viewMenus","editRes","y","setRestaurant","inputs","deleteRestaurant","dontDeleteRestaurant","dialog","curRestaurant","selectedManagers","availableManagers","selectedMenus","availableMenus","openDeleteDialog","open","addManager","filter","length","idx","map","e","managerName","indexOf","item","splice","availableManager","selectedManager","removeManager","itemIdx","slice","addMenu","public","availableMenu","selectedMenu","removeMenu","setAvailableManager","event","target","setSelectedManager","setAvailableMenu","setSelectedMenu","getManagers","managers","manager","userID","includes","getMeuns","getMenus","menu","menuID","updateRestaurant","setUpdateRestaurant","alert","localStorage","setItem","clickEvent","msg","getRestaurant","undefined","getItem","parse","authService","onLoginClick","login","fetchOAuthCredentials","NavigationEnd","shouldShowCreateMenuButton","checkDynamicURL","events","pipe","evaluateConditions","shouldShowCreateRestaurantButton","url","shouldShowUserProfileButton","params","split","openCreateRestaurantDialog","title","openCreateMenuDialog","goToUserProfile","navigateByUrl","menuData","getMenu","getMenuSections","getRestaurantName","name","Object","keys","redirectToMenu","setMenu","dashboardService","getUser","user","email","profile_image","getAllRestaurants","restaurants","HttpHeaders","AuthService","logout","post","headers","factory","providedIn","restaurantData","baseURL","UserID","EditRestaurantService","getAllRestaurant","restaurantIDs","restaurant","isupdate","delete","deleteRes","handleLogout","clear","production","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}